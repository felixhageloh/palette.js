{"version":3,"sources":["test/test.coffee"],"names":[],"mappings":"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","file":"public/test.js","sourcesContent":["# This is NOT how you write tests kids, so don't try this at home\nImg = require \"src/image\"\nPalette = require \"src/palette\"\n\nImg 'test.png', (image) ->\n  console.log 'image loaded'\n\n  numPixels = 0\n  image.eachPixel (rgb) -> numPixels++\n  console.log \"it has\", numPixels, \"pixels\\n\"\n\n\nPalette 'test.png', 3, (palette) ->\n  console.log \"got palette: \", palette.colors\n  console.log \"sampled\", palette.numSamples, \"pixels\"\n  console.log \"counts for each color\", palette.counts\n\n\nmakePaletteEl = (palette) ->\n  container = document.createElement 'div'\n\n  colorContainer = document.createElement 'div'\n  countContainer = document.createElement 'div'\n  for c, i in palette.colors\n    c ?= []\n    colorEl = document.createElement 'div'\n    colorEl.style.display = 'inline-block'\n    colorEl.style.width   = 40 +'px'\n    colorEl.style.height  = 20 +'px'\n    colorEl.style.backgroundColor = \"rgb(#{c.join(',')})\"\n\n    countEl = document.createElement 'div'\n    countEl.style.display = 'inline-block'\n    countEl.style.width   = 40 +'px'\n    countEl.style.height  = 20 +'px'\n    countEl.style.fontSize = 11+'px'\n    countEl.style.textAlign = 'center'\n    countEl.innerHTML = palette.counts[i]\n\n    colorContainer.appendChild(colorEl)\n    countContainer.appendChild(countEl)\n\n  container.appendChild(colorContainer)\n  container.appendChild(countContainer)\n  container\n\n\nshowTestImage = (i) ->\n  Palette \"#{i}.jpg\", 5, (palette) ->\n    img = new Image()\n    img.src = \"#{i}.jpg\"\n    img.style.marginTop = 20+'px'\n    document.body.appendChild(img)\n    document.body.appendChild makePaletteEl(palette)\n\nshowTestImage(i) for i in [1..3]\n\n\n"]}